---
import { client, queries, urlFor } from '../lib/sanity';

// Helper function to build URL from navigation item
function buildNavigationUrl(item: any): string {
	if (item.linkType === 'external') {
		return item.externalUrl;
	}
	
	switch (item.pageType) {
		case 'main':
			return item.mainPage;
		case 'room':
			return `/rooms/${item.roomSlug}`;
		case 'restaurant':
			return `/dining/${item.restaurantSlug}`;
		case 'amenity':
			return `/amenities/${item.amenitySlug}`;
		default:
			return item.mainPage || '/';
	}
}

// Fetch site settings from Sanity
const siteSettings = await client.fetch(queries.siteSettings);

// Extract data from siteSettings - only use CMS data
const logoWhite = siteSettings?.logoWhite;
const contactInfo = siteSettings?.contactInfo;
const footerMenu = siteSettings?.footerMenu || [];
const socialLinks = siteSettings?.socialLinks || [];
const legalLinks = siteSettings?.legalLinks || [];
const partnerLogos = siteSettings?.partnerLogos || [];

// Helper function to get image URL safely
function getImageUrl(image: any, width: number, height: number): string {
	if (!image?.asset?._ref) {
		return '/logo-white-placeholder.png';
	}
	return urlFor(image).width(width).height(height).url();
}

// Helper function to get social icon
function getSocialIcon(platform: string): string {
	const icons: { [key: string]: string } = {
		facebook: 'üìò',
		instagram: 'üì∑',
		twitter: 'üê¶',
		linkedin: 'üíº',
		youtube: 'üì∫',
		tiktok: 'üéµ',
		pinterest: 'üìå'
	};
	return icons[platform] || 'üîó';
}
---


<footer>
	<div class="footer-top">
		<div class="wrapper">
			<div class="footer-columns">
				<div class="footer-column">
					<a class="footer-logo" href="/" data-sanity-edit-field="siteSettings#footerLogo">
						<span class="footer-logo-text">{siteSettings?.title || "Paradise Hotel"}</span>
					</a>
					<ul class="footer-partners">
						{partnerLogos && Array.isArray(partnerLogos) && partnerLogos.map((logo: any) => (
							<li>
								<a href={logo.url || '#'} aria-label={logo.alt || 'Partner'}>
									<img height="76" width="105" src={getImageUrl(logo, 105, 76)} alt={logo.alt || 'Partner'} />
								</a>
							</li>
						))}
					</ul>
				</div>
				<div class="footer-column">
					<ul class="footer-links">
						{contactInfo?.address && (
							<li>
								<span class="address" data-sanity-edit-field="siteSettings#contactInfo.address">
									{Array.isArray(contactInfo.address) ? (
										contactInfo.address.map((line: string) => (
											<span>{line}</span>
										))
									) : (
										<span>{contactInfo.address}</span>
									)}
								</span>
							</li>
						)}
						{contactInfo?.phone && (
							<li>
								<span class="telephone">
									<a href={`tel:${contactInfo.phone}`} data-sanity-edit-field="siteSettings#contactInfo.phone">
										<span>Tel:</span>
										<span>{contactInfo.phone}</span>
									</a>
								</span>
							</li>
						)}
						{contactInfo?.email && (
							<li>
								<span class="email">
									<a href={`mailto:${contactInfo.email}`} data-sanity-edit-field="siteSettings#contactInfo.email">
										<span>{contactInfo.email}</span>
									</a>
								</span>
							</li>
						)}
					</ul>
				</div>
				<div class="footer-column">
					<ul class="footer-menu">
						{footerMenu && Array.isArray(footerMenu) && footerMenu.map((item: any) => {
							const url = buildNavigationUrl(item);
							const target = item.linkType === 'external' && item.openInNewTab ? '_blank' : '_self';
							const rel = item.linkType === 'external' && item.openInNewTab ? 'noopener noreferrer' : '';
							return (
								<li>
									<a href={url} target={target} rel={rel}>
										{item.label}
									</a>
								</li>
							);
						})}
					</ul>
					<ul class="social">
						{socialLinks && Array.isArray(socialLinks) && socialLinks.map((social: any) => {
							const icon = social.customIcon ? getImageUrl(social.customIcon, 24, 24) : getSocialIcon(social.platform);
							const ariaLabel = social.ariaLabel || `${social.platform} social media`;
							return (
								<li>
									<a href={social.url} aria-label={ariaLabel} target="_blank" rel="noopener noreferrer">
										{social.customIcon ? (
											<img src={icon} alt={ariaLabel} width="24" height="24" />
										) : (
											<span class="social-icon">{icon}</span>
										)}
										{social.showText && <span class="social-text">{social.platform}</span>}
									</a>
								</li>
							);
						})}
					</ul>
				</div>
			</div>
		</div>
	</div>
	<div class="footer-bottom">
		<div class="wrapper">
			<ul class="footer-legal">
				{legalLinks && Array.isArray(legalLinks) && legalLinks.map((link: any) => {
					const url = buildNavigationUrl(link);
					const target = link.linkType === 'external' && link.openInNewTab ? '_blank' : '_self';
					const rel = link.linkType === 'external' && link.openInNewTab ? 'noopener noreferrer' : '';
					return (
						<li>
							<a href={url} target={target} rel={rel}>
								{link.label}
							</a>
						</li>
					);
				})}
			</ul>
			<!-- Theme Controls -->
			<div class="footer-theme-controls">
				<button 
					id="theme-controls-toggle" 
					class="theme-controls-btn" 
					aria-label="Open theme controls"
					popovertarget="theme-controls-popover"
				>
					<span class="theme-icon">üé®</span>
					<span class="theme-text">Customize</span>
				</button>
				<div id="theme-controls-popover" class="theme-controls-popover" popover="manual">
					<div class="popover-header">
						<h3>Customize Appearance</h3>
						<button 
							class="popover-close" 
							aria-label="Close theme controls"
							popovertarget="theme-controls-popover"
							popovertargetaction="hide"
						>
							<span class="material-symbols-outlined">close</span>
						</button>
					</div>
					<div class="popover-content">
						<div class="theme-section">
							<label for="theme-select">Color Theme</label>
							<select id="theme-select" aria-label="Choose theme">
								<option value="default">Sophisticated</option>
								<option value="ocean">Blue-Gray</option>
								<option value="forest">Warm Stone</option>
								<option value="sunset">Charcoal</option>
								<option value="luxury">Purple-Gray</option>
								<option value="minimal">Ultra Minimal</option>
							</select>
						</div>
						
						<div class="theme-section">
							<label for="font-mode-select">Typography</label>
							<select id="font-mode-select" aria-label="Choose font mode">
								<option value="dual">Dual Font</option>
								<option value="single">Single Font</option>
								<option value="triple">Triple Font</option>
								<option value="luxury">Luxury</option>
								<option value="performance">Performance</option>
							</select>
						</div>
						
						<div class="theme-section">
							<label>Dark Mode</label>
							<button id="theme-toggle" class="theme-toggle-btn" aria-label="Toggle dark mode">
								<span class="theme-icon">üåô</span>
								<span class="theme-text">Toggle</span>
							</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</footer>