---
import Layout from '../../layouts/Layout.astro';
import { client, queries, urlFor } from '../../lib/sanity';

export async function getStaticPaths() {
  const diningOptions = await client.fetch(queries.dining);
  
  return diningOptions.map((restaurant: any) => ({
    params: { slug: restaurant.slug.current },
    props: { restaurant },
  }));
}

const { slug } = Astro.params;
const restaurant = await client.fetch(queries.diningOption, { slug });

if (!restaurant) {
  return Astro.redirect('/404'); // Or a custom not found page
}

// Unsplash image helper function
function getUnsplashImage(query: string, width: number = 800, height: number = 600): string {
  // Use Picsum Photos for reliable placeholder images
  const seed = query.replace(/\s+/g, '').toLowerCase();
  return `https://picsum.photos/seed/${seed}/${width}/${height}`;
}
---

<Layout title={`${restaurant.name} - Paradise Hotel`}>
  <main>
    <section class="page-banner">
      {restaurant.images && restaurant.images.length > 0 ? (
        <img src={urlFor(restaurant.images[0]).width(1920).height(1080).url()} alt={restaurant.images[0].alt || restaurant.name} />
      ) : (
        <img src={getUnsplashImage('restaurant dining', 1920, 1080)} alt={restaurant.name} />
      )}
      <div class="overlay"></div>
      <div class="heading">
        <div class="inner">
          <span class="subtitle">Our Exquisite</span>
          <h1 class="title3">{restaurant.name}</h1>
        </div>
      </div>
    </section>

    <section id="main">
      <div class="wrapper">
        <div class="post-details">
          <div class="post-content">
            <div class="inner">
              <h2><span>{restaurant.name}</span></h2>
              <span class="subtitle">{restaurant.cuisine} â€¢ {restaurant.priceRange}</span>
              <p>{restaurant.description}</p>

              <h3>Restaurant Information</h3>
              <ul class="alt-list">
                {restaurant.location && <li><strong>Location:</strong> {restaurant.location}</li>}
                {restaurant.hours && (
                  <>
                    {restaurant.hours.breakfast && <li><strong>Breakfast:</strong> {restaurant.hours.breakfast}</li>}
                    {restaurant.hours.lunch && <li><strong>Lunch:</strong> {restaurant.hours.lunch}</li>}
                    {restaurant.hours.dinner && <li><strong>Dinner:</strong> {restaurant.hours.dinner}</li>}
                  </>
                )}
                {restaurant.reservations && <li><strong>Reservations:</strong> Required</li>}
              </ul>

              {restaurant.menuHighlights && restaurant.menuHighlights.length > 0 && (
                <>
                  <h3>Menu Highlights</h3>
                  <ul class="alt-list">
                    {restaurant.menuHighlights.map((item: any) => (
                      <li>
                        <strong>{item.dish}</strong>
                        {item.description && <span> - {item.description}</span>}
                        {item.price && <span> - ${item.price}</span>}
                      </li>
                    ))}
                  </ul>
                </>
              )}

              <div class="buttons">
                <div><a class="btn" href="/contact">Make Reservation</a></div>
              </div>
            </div>
          </div>
          {restaurant.images && restaurant.images.length > 1 && (
            <div class="post-gallery">
              {restaurant.images.slice(1).map((image: any) => (
                <img src={urlFor(image).width(800).height(600).url()} alt={image.alt || restaurant.name} />
              ))}
            </div>
          )}
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
.post-details {
  display: grid;
  gap: 3rem;
  margin: 4rem 0;
}

.post-gallery {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

.post-gallery img {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: 8px;
}

@media (min-width: 768px) {
  .post-details {
    grid-template-columns: 2fr 1fr;
  }
}
</style>
